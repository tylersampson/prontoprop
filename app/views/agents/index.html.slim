= content_for :title, Agent.model_name.human(count: 10)
= content_for :actions do
  = link_to(icon('plus', I18n.t('create')), new_agent_path, class: 'btn btn-ribbon btn-success') if policy(Agent).create?
  = link_to(icon('file', I18n.t('import')), '#', class: 'btn btn-ribbon btn-success', data: { toggle: 'modal', target: '#import_modal'})
- content_for :modals do
  #import_modal.modal.fade
    .modal-dialog
      = bootstrap_form_tag url: import_agents_path, multipart: true do |f|
        .modal-content
          .modal-header
            button.close type="button" data-dismiss="modal" = icon('tick')
            h4.modal-title Import
          .modal-body
            p Choose the CSV file you wish to import below.
            = f.file_field :file, hide_label: true
          .modal-footer
            = f.submit "Import", class: 'btn btn-success' 
#widget-grid
  #widget-table.jarviswidget data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false"
    header
      span.widget-icon = icon('table')
      h2 = Agent.model_name.human(count: 10)
      .widget-toolbar
        = paginate @agents
      .widget-toolbar
        = pager_per_select
      .widget-toolbar
        = page_entries_info @agents
      .jarviswidget-ctrls
        a.button-icon class=('txt-color-red' if params[:q].present?) href="javascript:;" data-toggle="collapse" data-target="#filters" = icon('search')
    div
      .widget-body.no-padding
        == render 'search'
        .table-responsive
          table.table.table-striped.table-hover.table-condensed
            thead
              tr
                th = Agent.human_attribute_name(:first_name)
                th = Agent.human_attribute_name(:last_name)
                th = Agent.human_attribute_name(:employee_number)
                th = Agent.human_attribute_name(:mobile)
                th = Agent.human_attribute_name(:email)
                th = Agent.human_attribute_name(:tax_percent)
                th
            tbody
              - @agents.each do |agent|
                tr
                  td = link_to agent.first_name, agent
                  td = agent.last_name
                  td = agent.employee_number
                  td = agent.mobile
                  td = agent.email
                  td = agent.tax_percent
                  td
                    = link_to(I18n.t('edit'), edit_agent_path(agent), class: 'btn btn-primary') if policy(agent).update?
                    = link_to(I18n.t('delete'), agent_path(agent), method: :delete, class: 'btn btn-danger', data: { confirm: 'Are you sure?' }) if policy(agent).destroy?
